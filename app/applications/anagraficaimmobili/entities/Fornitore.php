<?php

namespace applications\anagraficaimmobili\entities;


use applications\login\entities\User;
use core\db\Field;
use core\Model;
use core\services\Db;

class Fornitore extends Model{

    static function schema()
    {
        return [

            "id"    =>  Field::primaryIndex(), //Come lo setto auto increment e hidden?

            "user_nome" =>  Field::reference()->inlist(true)->setLabel("Nome"),
            "user_cognome" =>  Field::reference()->inlist(true)->setLabel("Cognome"),
            "user_email" =>  Field::reference()->inlist(true)->setLabel("Email"),
            "user_username" =>  Field::reference()->inlist(true)->setLabel("Username"),

            "indirizzo"  =>  Field::varchar(512)->editable()->inlist(false)->setPlaceholder("Indirizzo e numero civico"),
            "cap"  =>  Field::varchar(512)->editable()->setTemplate("cap")->inlist(false)->setPlaceholder("CAP")->setFieldsize("small")->setMaxlength(5),
            "citta"  =>  Field::varchar(512)->editable()->inlist(false)->setPlaceholder("Inserisci cittÃ ")->setFieldsize("medium")->setMaxlength(512),
            "provincia"  =>  Field::varchar(512)->editable()->inlist(false)->setPlaceholder("Provincia")->setFieldsize("small")->setMaxlength(2),
            "paese"  =>  Field::varchar(512)->editable()->inlist(false)->setPlaceholder("Inserisci nazione")->setFieldsize("medium")->setMaxlength(512),
            "partitaIva"  =>  Field::varchar(512)->editable()->inList(false)->setPlaceholder("Inserisci partita iva")->setFieldsize("medium")->setMaxlength(13)->setLabel("Partita IVA"),
            "codiceFiscale"  =>  Field::varchar(512)->editable()->setPlaceholder("Inserisci codice fiscale")->setFieldsize("medium")->setMaxlength(16)->setLabel("Codice Fiscale"),
            
            "attivo"  =>  Field::int()->inlist(false),

            //"user_id"   =>  Field::int()->inlist(false)->editable()->setLabel("Utente")->setFieldsize("medium")->setTemplate("select")->setTemplateVar(User::getForSelect("username","id")),
            "user_id"   =>  Field::int()->inlist(false)->editable()->setLabel("Utente")->setFieldsize("medium")
            ->setExternal(User::class,"id",[
                "nome",
                "cognome",
                "username",
                "email"
            ]),

        ];
    }

    static function getInstance($data)
    {
        $instance= parent::getInstance($data); // TODO: Change the autogenerated stub
               $instance->user = $instance->getUser();



        return $instance;
    }

    function getUser(){
        if($this->user_id)
        return User::findById($this->user_id);
        else
            return false;
    }
    function expand()
    {
        $this->condomini = Condominio::query()->where("idFornitore=".$this->id)->getAll();
    }

    function displayValue($key)
    {

        if($key == "user_nome"){

            if( empty($this->user)){
                $this->user = $this->getUser();
            }
            if($this->user){
                return $this->user->nome;
            }else{
                return "-";
            }
        }
        if($key == "user_cognome"){

            if( empty($this->user)){
                $this->user = $this->getUser();
            }
            if($this->user){
                return $this->user->cognome;
            }else{
                return "-";
            }
        }
        if($key == "user_email"){

            if( empty($this->user)){
                $this->user = $this->getUser();
            }
            if($this->user){
                return $this->user->email;
            }else{
                return "-";
            }
        }
        if($key == "user_username"){

            if( empty($this->user)){
                $this->user = $this->getUser();
            }
            if($this->user){
                return $this->user->username;
            }else{
                return "-";
            }
        }




        switch ($key){
        case "nome_cognome" :
            if( empty($this->user) ){
                $this->user = $this->getUser();
            }
            return $this->user->nome." ".$this->user->cognome;
    }

        return parent::displayValue($key);
    }
}