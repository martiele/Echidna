<?php
namespace applications\menu\entities;


use core\db\Field;
use core\Model;

class Menu extends Model{
    static function schema()
    {
        return [
            "id" => Field::primaryIndex(),
            "id_menu"   =>  Field::int()->editable()->setTemplate("select")->setTemplateVar([static::class,"getForSelect"])->setLabel("Figlio di"),
            "nome"  =>  Field::varchar(512)->editable(),

            "position" => Field::varchar(512)->editable()->setTemplate("select")->setTemplateVar([
                ["label"=>"---Nessuna---","value"=>""],
                ["label"=>"Header","value"=>"header"],
                ["label"=>"Header a destra","value"=>"headerright"],
                ["label"=>"Footer","value"=>"footer"]
            ]),
            "active"    =>  Field::int()->editable()->setTemplate("select")->setTemplateVar([
                ["label"=>"Non attivo","value"=>0],
                ["label"=>"Attivo","value"=>1]
            ])
        ];
    }

    static function getForSelect($label = "", $id = "")
    {

        $entity = static::class;


        $tt = $entity::query(true)->getAll();
        $options = [];
        $options[] = [
            "label" =>  "---scegli---",
            "value"=> 0
        ];


        foreach ($tt as $item) {

            $options[] = [
                "label" =>  $item->nome,
                "value" =>  $item->id
            ];
        }
        return $options;
    }

    static function getInstance($data)
    {

        $menu = parent::getInstance($data); // TODO: Change the autogenerated stub

        $links = MenuItem::query()->where("id_menu=".$menu->id)->setOrderBy("position","ASC")->getAll();

        $query =Menu::query()->where("id_menu=".$menu->id)->setOrderBy("position","ASC");
        $menus = $query->getAll();




        $items = array_merge($links,$menus);


        usort($items,function($a,$b){
            if( (int)$a->position < (int)$b->position ){
                return -1;
            }
            if( (int)$a->position > (int)$b->position ){
                return 1;
            }

            return 0;
        });



        $menu->items = $items;


        return $menu;
    }

    public function getParentMenu(){
        return Menu::findById($this->id_menu);
    }


}