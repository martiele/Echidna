<?php
namespace applications\newsletter;

use applications\newsletter\entities\NewsletterUtente;
use backend\Menu;
use core\abstracts\Application;
use core\abstracts\BackendApplication;
use core\abstracts\FrontendApplication;
use core\Model;
use core\services\Response;
use core\services\RouterService;

class NewsletterApplication extends Application{

    static function getFrontendApplication()
    {
      return NewsletterFrontend::class;
    }

    static function getBackendApplication()
    {
        return NewsletterBackend::class;
     }

    static function getEntityClass()
    {
       return NewsletterUtente::class;
    }

    static function install()
    {
        return [
            NewsletterUtente::class
        ];
    }


    static function init($n)
    {
        $errori = [
            "1" =>  "L'indirizzo email Ã¨ giÃ  iscritto alla nostra newsletter"
        ];


        parent::init($n); // TODO: Change the autogenerated stub
        $menu = new Menu("Newsletter",self::getBackendApplication()::getIcon());
        $menu->addItem("Utenti",RouterService::getRoute(NewsletterUtente::getEntity().".list"));
        $menu->addItem("Aggiungi",RouterService::getRoute(NewsletterUtente::getEntity().".add"));

        $backend = Response::getBackendTemplate();
        $backend::addMenu($menu);


        $errore = isset($_GET['errore-newsletter']) ? $errori[$_GET['errore-newsletter']] : "";
        $messaggio = isset($_GET['iscritto-newsletter']) ? "Grazie per esserti iscritto alla nostra newsletter" : "";


        $t = Response::getFrontendTemplate();
        $t->addFunction("newsletterForm",function( $a = null) use ($errore,$messaggio) {
            return Response::getTemplateToUse("newsletter/mini",[
                "errore"    => $errore,
                    "messaggio" =>  $messaggio
                ]
            )->render();
        });


    }
}