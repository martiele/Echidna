<?php

namespace applications\blog;

use applications\blog\entities\Articolo;
use applications\blog\entities\Categoria;
use core\abstracts\FrontendApplication;
use core\Route;
use core\RouteFilter;
use core\services\Response;
use core\services\RouterService;
use frontend\melaverde\applications\etichetta\entities\Band;
use frontend\melaverde\applications\etichetta\entities\Evento;
use frontend\melaverde\applications\etichetta\entities\Pubblicazione;

class BlogFrontend extends FrontendApplication{
    static function declareRoutes()
    {

        $r = parent::declareRoutes(); // TODO: Change the autogenerated stub

        RouterService::addRoute("frontend.blog.home",new Route("","/blog",[self::class,"_homeBlog"]));

        RouterService::addRoute("frontend.blog.articolo",new Route("","/blog/{categoria:([0-9a-zA-Z-]*)}/{slug:([0-9a-zA-Z-]*)}",[self::class,"_articolo"]));

        RouterService::addRoute("frontend.blog.categoria",new Route("","/blog/{slug:([0-9a-zA-Z-]*)}",[self::class,"_categoria"]));


        RouterService::addFilter( (new RouteFilter())->setName("frontend.blog.variables")->setRegex("/blog/{a:(.*)}")->setCallback([self::class,"setVariables"]));
        RouterService::addFilter( (new RouteFilter())->setName("frontend.blog.variablessolo")->setRegex("/blog")->setCallback([self::class,"setVariables"]));


        return $r;
    }


    static function _categoria( $params = []){
        $categoria = Categoria::findBySlug($params['slug']);
        if(empty($categoria)){
            return false;
        }
        $categoria = $categoria[0];
        $articoli = Articolo::query()->where("categoria_id = ".$categoria->id)->setOrderBy("id","DESC")->getAll();

        Response::addVariable([
            "breadcrumbs"=>[
                [
                    "label" =>  "Blog",
                    "url"   =>  RouterService::getRoute("frontend.blog.home")->build()
                ],
                [
                    "label"=>$categoria->nome,
                    "nolink"    =>  true
                ]
            ]
        ]);
        return [
            "blog/category",[
                "categoria" =>  $categoria,
                "articoli"=>$articoli
            ]
        ];
        exit;
    }
    static function setVariables($route){

        Response::addVariable([
            "blog_categorie" => Categoria::query()->getAll(),
            "blog_ultimi_articoli"  =>  Articolo::query()->setOrderBy("id","desc")->setLimit("3")->getAll()
        ],true);
        return true;
    }

    static function _articolo( $params =[] ){

        $articolo = Articolo::findBySlug($params['slug']);


        if(!$articolo){
            return false;
        }

        $articolo = $articolo[0];

        Response::addVariable([
            "breadcrumbs"=>[
                [
                    "label" =>  "Blog",
                    "url"   =>  RouterService::getRoute("frontend.blog.home")->build()
                ],
                [
                    "label"=>$articolo->getCategoria()->nome,
                    "url"    =>  RouterService::getRoute("frontend.blog.categoria")->build(["slug"=>$articolo->getCategoria()->slug])
                ],
                [
                    "label"=>$articolo->titolo,
                    "nolink"    =>  true
                ]
            ]
        ]);
        return ["blog/articolo",
            [
                "articolo"  =>  $articolo
            ]];
    }

    static function _homeBlog( $params = [] ){
        $articoli = Articolo::query()->setOrderBy("id","desc")->getAll();


        Response::addVariable([
            "breadcrumbs"=>[
                [
                    "label" =>  "Blog",
                    "nolink"    =>  true
                ]
            ]
        ]);


        return ["blog/home",[
            "articoli"  =>  $articoli
        ]];
    }
}