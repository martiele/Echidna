<?php
  namespace applications\ecommerce;

  use applications\ecommerce\entities\Provincia;
  use applications\ecommerce\entities\Spedizione;
  use applications\ecommerce\entities\SpedizionePrezzo;
  use applications\ecommerce\entities\Zona;
  use core\abstracts\Application;
  use core\abstracts\BackendApplication;
  use core\Route;
  use core\services\Response;
  use core\services\RouterService;

  class SpedizioniPrezzi extends BackendApplication {
      static function getApplication()
      {
          return EcommerceApplication::class;
      }

      static function getEntityClass()
      {
          return SpedizionePrezzo::class;
      }



      static function actionUpdate($params = [], $data = null)
      {
          $r =  parent::actionUpdate($params, $data); // TODO: Change the autogenerated stub
          return Response::redirect(
              RouterService::getRoute(Spedizione::class.".mod")->build(
                  [
                      "id"  =>  $r[1]['data']->id_ecommerce_spedizione
                  ]
              )

          );
      }

      static function actionDelete($params = [])
      {

          $ids = SpedizionePrezzo::findById($params['id'])->id_ecommerce_spedizione;

          parent::actionDelete($params); // TODO: Change the autogenerated stub


          return Response::redirect(
              RouterService::getRoute(Spedizione::class.".mod")->build(
                  [
                      "id"  =>  $ids
                  ]
              )

          );
      }

      static function actionInsert($params = [], $data = null)
      {
          $r = parent::actionInsert($params, $data); // TODO: Change the autogenerated stub

          return Response::redirect(
              RouterService::getRoute(Spedizione::class.".mod")->build(
                  [
                      "id"  =>  $r[1]['data']['data']->id_ecommerce_spedizione
                  ]
              )

          );


      }


  }