<?php

namespace applications\ecommerce\entities;


use applications\ecommerce\Prodotti;
use core\db\Field;
use core\Model;
use core\services\Db;

class Variante extends Model{

    static function getTable()
    {
        return "ecommerce_prodotto_variante";
    }

    static function schema()
    {
        return [
            "id"    =>  Field::primaryIndex(),
            "id_prodotto"  =>  Field::int()->editable(),
            "nome"  =>  Field::varchar(512)->editable(),
            "sku"  =>  Field::varchar(64)->editable(),
            "prezzo"   =>  Field::text()->editable(),
            "prezzo_speciale"   =>  Field::text()->editable(),
            "descrizione"   =>  Field::text()->editable()->setTemplate("textarea"),
            "primaria"   =>  Field::int()->editable()->setDefault(0)->setTemplate("select")->setTemplateVar([
                [
                    "label" => "Non impostata come default",
                    "value" =>  0
                ],
                [
                    "label" => "Variante di default",
                    "value" =>  1
                ]
            ]),
            "immagini"  =>  Field::entity(AttachmentText::class,2)->editable()->setTemplate("select-multiple-images")->setLabel("Galleria immagini"),

        ];
    }

    public function expand(){
        $attributi = VarianteAttributo::findByVariante( $this->id );

        $this->attributi = $attributi;
        $this->images = $this->getImages();
        $this->campi = $this->getCampi();
    }

    public function getProduct(){
        return Prodotto::findById($this->id_prodotto);
    }

    public function getCampi(){


        $sql = "select * from ecommerce_prodotto_variante_campi where id_ecommerce_prodotto_variante = :id";
        return Db::$connection->fetchAll($sql,[
            "id"    =>  $this->id
        ]);
    }

    public function gotAttributeValue ( $id ){




        $got = false;
        foreach ($this->attributi as $key => $value){
            if( $value->valore->id == $id){
                $got = true;
            }
        }

        return $got;
    }

    /**
     * @return array
     * @deprecated
     */
    public function getImages(){

        return [];
    }

    function save()
    {

        if($this->primaria == 1){
            $sql = "update ecommerce_prodotto_variante SET primaria = 0 WHERE primaria = 1 AND id_prodotto=".$this->id_prodotto;

            Db::$connection->perform($sql);
        }

        parent::save(); // TODO: Change the autogenerated stub
    }




}