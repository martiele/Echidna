<?php
namespace core\db  ;


use Aura\Sql\ExtendedPdo;

class DbPdo extends ExtendedPdo {

    public $debugQuery = false;

    public function __construct(
        $dsn,
        $username = null,
        $password = null,
        array $options = array(),
        array $attributes = array()
    )
    {
        return parent::__construct($dsn,$username,$password,$options,$attributes);
    }
    public function fetchAll(
        $statement,
        array $values = array(),
        $callable = null
    )
    {
     /*   $fp = fopen(__DIR__.'/querylog.txt', 'a');//opens file in append mode
        fwrite($fp,  $statement.PHP_EOL);

        fclose($fp);
*/
        if($this->debugQuery) echo $statement."<br>";
        return parent::fetchAll($statement, $values, $callable); // TODO: Change the autogenerated stub
    }
 
    public function fetchValue($statement, array $values = array())
    {
        if($this->debugQuery) echo $statement."<br>";
        return parent::fetchValue($statement,$values);
    }
    public function exec($statement)
    {
        if($this->debugQuery) echo $statement;
        return parent::exec($statement);
    }
    
    public function fetchOne($statement, array $values = array())
    {
        if($this->debugQuery) echo $statement."<br>";
        return parent::fetchOne($statement,$values);
    }

    public function query($statement)
    {
        if($this->debugQuery) echo $statement;
        return parent::query($statement);
    }

    public function fetchAssoc($statement, array $values = array(), $callable = null)
    {
        if($this->debugQuery) echo $statement;
        return parent::fetchAssoc($statement,$values,$callable);
    }

    public function perform($statement, array $values = array())
    {
        if($this->debugQuery) echo $statement."<br>";
        return parent::perform($statement,$values);
    }
}
