<?php

namespace frontend\consorzioleonardo\applications\progetti\entities;


use core\db\Field;
use core\Model;
use frontend\consorzioleonardo\applications\imprese\entities\Impresa;

class Progetto extends Model{
    static function schema()
    {
       return [
           "id" =>  Field::primaryIndex(),
           "nome"   =>  Field::varchar(512)->editable(),
           "riferimento"    =>  Field::varchar(64)->editable(),
           "cig"    =>  Field::varchar(64)->editable(),
           "luogo"    =>  Field::varchar(64)->editable(),
           "scadenza"   =>  Field::date()->editable()->setTemplate("data"),
           "importo"    =>  Field::varchar(512)->editable(),
           "data_segnalazione"  =>  Field::date()->editable()->setTemplate("data")->setLabel("Data segnalazione"),
           "data_risposta"  =>  Field::date()->editable()->setTemplate("data")->setLabel("Data risposta"),
           "note"   =>  Field::text()->editable()->setTemplate("textarea"),
           "active" =>  Field::int(2)->editable()->setDefault(0)->setLabel("Stato"),
           "deleted" =>  Field::boolean()->setDefault(0)
       ];
    }

    function insert()
    {
        parent::insert();

        $imprese = Impresa::query()->getAll();

        foreach ($imprese as $key => $value ){
            $aziendaprogetto = new AziendaProgetto([
                "azienda_id"    =>  $value->id,
                "progetto_id"   =>  $this->id,
                "risposta"  =>  AziendaProgetto::RISPOSTA_NON_RISPOSTO
            ]);

            $aziendaprogetto->save();
        }

    }

    static function query($rawResult = false)
    {
        $query = parent::query($rawResult); // TODO: Change the autogenerated stub

        $query->where("deleted=0");
        return $query;
    }

    function remove()
    {
        $this->deleted = 1;
        $this->active = 0;
        $this->save();
        return true;
    }



    static function findActive(){
        $data = new \DateTime();
        return Progetto::query("where active=1")->where('"'.$data->format("Y-m-d").'" < scadenza')->getAll();
    }

    function displayValue($key)
    {
        switch ($key){
            case "active" :
                return $this->$key == 0 ? "Non attivo" : "Attivo";
                break;
            default:
                return parent::displayValue($key);
        }
    }


}