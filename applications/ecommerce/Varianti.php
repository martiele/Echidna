<?php

namespace applications\ecommerce;

use applications\ecommerce\entities\Ordine;
use applications\ecommerce\entities\Variante;
use core\abstracts\Application;
use core\abstracts\BackendApplication;
use core\Route;
use core\services\Db;
use core\services\Response;
use core\services\RouterService;

class Varianti extends BackendApplication {
    static function getApplication()
    {
        return EcommerceApplication::class;
    }

    static function declareRoutes()
    {
        $r = parent::declareRoutes(); // TODO: Change the autogenerated stub

        $r[Variante::getEntity()."addimages"] = (new Route(Variante::getEntity().".addimages","{id:([0-9]*)}/addimages",[self::class,"addImages"]))->method(Route::METHOD_POST);

        return $r;
    }


    static function getEntityClass()
    {
        return Variante::class;
    }

    static function actionMod($params = [])
    {
        $d = parent::actionMod($params); // TODO: Change the autogenerated stub




        return[
            "tabs", [
                "tabs" =>[
                    "proprieta" => [
                        "label" =>  "ProprietÃ ",
                        "content"   =>  Response::getTemplateToUse("mod",$d[1],"empty.twig")->render()
                    ],
                    "immagini"  =>  [
                        "label" =>  "Immagini",
                        "content"   =>  Response::getTemplateToUse("ecommerce/templates/addimages",[
                            "directory" => "catalogo/varianti/",
                            "postRoute" =>  RouterService::getRoute(Variante::getEntity()."addimages")->build(["id"=>$d[1]['data']->id]),
                            "immagini" =>  $d[1]['data']->getImages()

                        ],"empty.twig")->render()

                    ]
                ]
            ]
        ];
    }

    static function addImages( $params =[], $data ){




        $sql = "INSERT INTO ecommerce_prodotto_variante_immagine (id_variante,permalink) VALUES (:id,:permalink)";

        Db::$connection->perform($sql,[
            "id" => $params['id'],
            "permalink" => $data['permalink']
        ]);


        $lastid = Db::$connection->lastInsertId();

        $sql = "SELECT * FROM ecommerce_prodotto_variante_immagine where id=:id";
        return ["",[
            "data"=>Db::$connection->fetchOne($sql,["id"=>$lastid])
        ]
        ];

        var_dump($data);
        exit;
    }


}