<?php
namespace applications\ecommerce;


use applications\ecommerce\entities\Categoria;
use applications\ecommerce\entities\Prodotto;
use applications\pages\entities\Pagina;
use core\abstracts\Application;
use core\Model;
use core\Route;
use core\services\Response;
use core\services\RouterService;

class EcommerceApplication extends Application {

    static function init($n)
    {
        parent::init($n); // TODO: Change the autogenerated stub
        Response::addVariable([
            "menu"  =>  [
                "gestionecontenuti" => [[
                    "label" =>  "E-commerce",
                    "children"  =>  [
                        ["label" => "Ordini", "href" =>  "/backend/".static::$name."/ordini"],
                        ["label" => "Catalogo","href" =>  "/backend/".static::$name."/catalogo"],
                        ["label" => "Clienti","href" =>  "/backend/".static::$name."/clienti"],
                        ["label" => "Spedizioni","href" =>  "/backend/".static::$name."/spedizioni"],
                        ["label" => "Pagamenti","href" =>  "/backend/".static::$name."/pagamenti"]
                    ]
                ]
                ]]
        ]);
    }

    static function declareRoutes()
    {

        /*$entity::getEntity().".list"       =>  new Route("list",$entity::getListLink(),[static::class,"actionList"]),
            $entity::getEntity().".mod"        =>  new Route("mod",$entity::getModLink(),[static::class,"actionMod"]),
            $entity::getEntity().".add"        =>  new Route("add",$entity::getAddLink(),[static::class,"actionAdd"]),


            $entity::getEntity().".update"     =>  (new Route("update","{id:(.*)}",[static::class,'actionUpdate']))->method(Route::METHOD_PUT),
            $entity::getEntity().".insert"     =>  (new Route("insert","aggiungi",[static::class,'actionInsert']))->method(Route::METHOD_POST)
        */


        return [
            "ecommerce.ordini"  =>  new Route("ecommerce.ordini","/backend/ecommerce/ordini",[Ordini::class ,"ordini"]),
            "ecommerce.catalogo"  =>  new Route("ecommerce.catalogo","/backend/ecommerce/catalogo",[Catalogo::class ,"catalogo"]),
            Categoria::getEntity().".list"  =>  new Route( Categoria::getEntity()."list" ,"/backend/ecommerce/catalogo/categorie",[Catalogo::class,"listaCategorie"]),
            Categoria::getEntity().".mod"  =>  new Route( Categoria::getEntity()."mod" ,"/backend/ecommerce/catalogo/categorie/".Categoria::getModLink(),[Catalogo::class,"editCategoria"]),
            Categoria::getEntity().".update"  =>  (new Route( Categoria::getEntity()."mod" ,"/backend/ecommerce/catalogo/categorie/".Categoria::getModLink(),[Catalogo::class,"updateCategoria"]))->method(Route::METHOD_PUT),
            Categoria::getEntity().".add"  =>  (new Route( Categoria::getEntity()."mod" ,"/backend/ecommerce/catalogo/categorie/".Categoria::getAddLink(),[Catalogo::class,"updateCategoria"])),

            Prodotto::getEntity().".list"  =>  new Route( Prodotto::getEntity()."list" ,"/backend/ecommerce/catalogo/prodotti",[Catalogo::class,"listaProdotti"]),
            Prodotto::getEntity().".mod"  =>  new Route( Prodotto::getEntity()."mod" ,"/backend/ecommerce/catalogo/prodotti/".Prodotto::getModLink(),[Catalogo::class,"editProdotto"]),
            Prodotto::getEntity().".update"  =>  (new Route( Prodotto::getEntity()."mod" ,"/backend/ecommerce/catalogo/prodotti/".Prodotto::getModLink(),[Catalogo::class,"updateProdotto"]))->method(Route::METHOD_PUT),
            Prodotto::getEntity().".add"  =>  (new Route( Prodotto::getEntity()."mod" ,"/backend/ecommerce/catalogo/prodotti/".Prodotto::getAddLink(),[Catalogo::class,"updateProdotto"])),

        ];
    }


    static function ordini(){
        echo "we";
        exit;
    }

    static function getFrontendApplication()
    {
        return null;
    }

    static function getBackendApplication()
    {
        return null;
    }

    static function getEntityClass()
    {
        return null;
    }

}