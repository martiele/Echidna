<?php

namespace applications\ecommerce;

use applications\ecommerce\entities\Categoria;
use applications\ecommerce\entities\Prodotto;

use applications\ecommerce\traits\metodiCatalogoCategoria;
use applications\ecommerce\traits\metodiCatalogoProdotto;
use core\abstracts\Application;
use core\abstracts\BackendApplication;
use core\Route;
use core\services\Db;
use core\services\Response;
use core\services\RouterService;

class TipologiaProdotto extends BackendApplication {



    static function getApplication()
    {
        return EcommerceApplication::class;
    }

    static function getEntityClass()
    {
        return \applications\ecommerce\entities\TipologiaProdotto::class;
    }

    static function declareRoutes()
    {
        $r = parent::declareRoutes(); // TODO: Change the autogenerated stub

        $r['ecommerce.tipologiaprodotto.campi.insert'] = (new Route("ecommerce.tipologiaprodotto.campi.insert","campi/insert",[self::class,"insertCampo"]))->method(Route::METHOD_POST);

        return $r;
    }

    static function insertCampo($params =[], $data){
        $sql = "INSERT INTO ecommerce_tipologia_prodotto_campi (nome,slug,valore,id_ecommerce_tipologia_prodotto) VALUES (:nome,:slug,:valore,:id_ecommerce_tipologia_prodotto)";

        $r = Db::$connection->perform($sql,$data);
        var_dump($r);
        exit;
    }
    static function actionMod($params = [])
    {
        $r = parent::actionMod($params);

        $sql = "SELECT * FROM ecommerce_tipologia_prodotto_campi WHERE id_ecommerce_tipologia_prodotto=:id";
        $campi = Db::$connection->fetchAll($sql,[
            "id" => $r[1]['data']->id
            ]
        );

        return [
            'tabs',[
                "tabs"  =>  [
                    "pagina"    =>  [
                        "label" =>  "ProprietÃ  pagina",
                        "content"   => Response::getTemplateToUse("mod",$r[1],"empty.twig")->render()
                    ],
                    "campi"    =>  [
                        "label" =>  "Campi prodotto",
                        "content"   => Response::getTemplateToUse("ecommerce/templates/tipologiaprodotto.campi",[
                            "item"  =>  $r[1]['data'],
                            "campi" =>  $campi,
                            "urlinsert" =>  RouterService::getRoute("ecommerce.tipologiaprodotto.campi.insert")->build()
                        ],"empty.twig")->render()
                    ],
                    "attributi"    =>  [
                        "label" =>  "Attributi assegnati",
                        "content"   => Response::getTemplateToUse("ecommerce/templates/tipologiaprodotto.attributi",$r[1],"empty.twig")->render()
                    ],
                ],

            ]
        ];



        return [
            "ecommerce/templates/tipologiaprodotto", $r[1]

        ];



    }


}